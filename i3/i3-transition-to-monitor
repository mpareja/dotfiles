#!/bin/bash

set -eou pipefail
#set -x

# required when invoked by udev
detect_socket() {
  local THE_USER=$(ps ax -o comm,uid | grep "^i3\s" | awk '{ print $2 }')
  ls /run/user/$THE_USER/i3/ipc-socket* | head -1
}

S="-s $(detect_socket)"

main() {
  ATTEMPTS=20 # about 10 seconds
  CUR=$(i3-msg $S -t get_workspaces | jq '.[] | select(.focused) | .name' -r)

  with_retry $ATTEMPTS move_all_workspaces "$@" || {
    # in case of failure, cleanup
    echo Aborted. Returning to original workspace \"$CUR\".
    i3-msg $S workspace "$CUR" >/dev/null
    false
  }

  echo Finished. Returning to original workspace \"$CUR\".
  i3-msg $S workspace "$CUR" >/dev/null
}

move_all_workspaces() {
  # match active display that is not the monitor
  TARGET=${1:-$(find_widest_output)}
  if [ -z "$TARGET" ]; then
    echo no output target detected
    return 1
  fi

  echo Moving workspaces to output \"$TARGET\"
  echo

  workspaces_to_move "$TARGET" | while read w; do
    echo Workspace: $w
    move_workspace "$w" "$TARGET"
  done
}

find_widest_output() {
  # sort by widest, exclude laptop output and non-active outputs
  i3-msg $S -t GET_OUTPUTS | jq -r '.
    | sort_by(.rect.width, .name) | reverse | .[]
    | select(.active == true and .name != "eDP-1")
    | .name' \
    | head -1
}

workspaces_to_move() {
  i3-msg $S -t get_workspaces | jq ".[] | select(.output != \"$1\") | .name" -r | grep -v calendar
}

move_workspace() {
  WORKSPACE="$1"
  TARGET="$2"
  CURRENT="$(i3-msg $S -t get_workspaces | jq ".[] | select(.name == \"$WORKSPACE\") | .output" -r)"

  if [ "$CURRENT" != "$TARGET" ]; then
    i3-msg $S workspace "$WORKSPACE" >/dev/null
    i3-msg $S move workspace to output "$TARGET" >/dev/null
  else
    echo $WORKSPACE is already on output $CURRENT
  fi
}

with_retry() {
  local ATTEMPTS=$1
  shift

  for (( i=1; i <= $ATTEMPTS; i++ )); do
    if "$@"; then
      break
    fi

    if [ $i -ge $ATTEMPTS ]; then
      echo "ERROR: exceeded $ATTEMPTS attempts, aborting."
      return 1
    fi

    echo "WARN: error encountered, retrying the following command:"
    echo "  $@"
    sleep 0.5
  done
}

main "$@" # 2>&1 | tee -a /tmp/transition-to-monitor.log
